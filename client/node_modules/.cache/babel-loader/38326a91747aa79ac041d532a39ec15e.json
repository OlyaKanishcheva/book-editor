{"ast":null,"code":"import _objectSpread from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js\";\nimport './../stylesheets/AddBookForm.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addBook } from './../actions/actions';\nimport validTextInput from './../helpers/validTextInput'; // const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n//   const submit = e => {\n//     e.preventDefault()\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\nvar AddBookForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBookForm, _Component);\n\n  function AddBookForm(props, _ref) {\n    var _this;\n\n    var _store = _ref.store;\n\n    _classCallCheck(this, AddBookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBookForm).call(this, props));\n\n    _this.submit = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          state = _assertThisInitialize.state,\n          store = _assertThisInitialize.store,\n          refs = _assertThisInitialize.refs,\n          clearState = _assertThisInitialize.clearState;\n\n      e.preventDefault();\n      var textInputs = [{\n        name: refs._title,\n        maxLength: 30\n      }];\n      if (!textInputs.every(function (input) {\n        return validTextInput({\n          input: input.name,\n          maxLength: input.maxLength\n        });\n      })) return;\n      store.dispatch(addBook({\n        title: state.title,\n        publicationDate: +state.publicationDate\n      })); // textInputs.forEach((input) => input.name.value = '')\n      // refs._publicationDate.value = ''\n\n      refs._title.focus();\n\n      clearState();\n    };\n\n    _this.changeTitle = function (title) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          title: title\n        });\n      });\n    };\n\n    _this.changePublicationDate = function (date) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          publicationDate: date\n        });\n      });\n    };\n\n    _this.clearState = function () {\n      _this.setState({\n        title: '',\n        publicationDate: ''\n      });\n    };\n\n    _this.store = _store;\n    _this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : ''\n    };\n    return _this;\n  }\n\n  _createClass(AddBookForm, [{\n    key: \"render\",\n    value: function render() {\n      var changeTitle = this.changeTitle,\n          submit = this.submit,\n          changePublicationDate = this.changePublicationDate,\n          state = this.state,\n          refs = this.refs;\n      var title = state.title,\n          publicationDate = state.publicationDate;\n\n      var _title, _publicationDate;\n\n      return React.createElement(\"div\", {\n        className: \"add-book__host\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-book\",\n        onSubmit: submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"_title\",\n        type: \"text\",\n        className: \"add-book__input\",\n        value: title,\n        onChange: function onChange(e) {\n          return changeTitle(e.target.value);\n        },\n        placeholder: \"Book title...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Publication date:\\xA0\", React.createElement(\"input\", {\n        ref: \"_publicationDate\",\n        type: \"number\",\n        className: \"add-book__input\",\n        value: publicationDate,\n        onChange: function onChange(e) {\n          return changePublicationDate(e.target.value);\n        },\n        min: \"1800\",\n        max: \"2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"app__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return AddBookForm;\n}(Component);\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n};\nexport default AddBookForm;","map":{"version":3,"sources":["/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js"],"names":["React","Component","PropTypes","addBook","validTextInput","AddBookForm","props","store","submit","e","state","refs","clearState","preventDefault","textInputs","name","_title","maxLength","every","input","dispatch","title","publicationDate","focus","changeTitle","setState","prevState","changePublicationDate","date","editBook","_publicationDate","target","value","contextTypes","object"],"mappings":"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","sourcesContent":["import './../stylesheets/AddBookForm.css'\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { addBook } from './../actions/actions'\nimport validTextInput from './../helpers/validTextInput'\n\n// const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n\n//   const submit = e => {\n//     e.preventDefault()\n\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n    \n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n\n// }\n\nclass AddBookForm extends Component {\n\n  constructor(props, {store}) {\n    super(props)\n\n    this.store = store\n    this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : ''\n    }\n  }\n\n  submit = (e) => {\n    const {state, store, refs, clearState} = this\n    e.preventDefault()\n\n    const textInputs = [{\n      name: refs._title,\n      maxLength: 30\n    }]\n\n    if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n    store.dispatch(addBook({\n      title: state.title,\n      publicationDate: +(state.publicationDate)\n    }))\n    \n    // textInputs.forEach((input) => input.name.value = '')\n    // refs._publicationDate.value = ''\n    refs._title.focus()\n    clearState()\n  }\n\n  changeTitle = (title) => {\n    this.setState(prevState => ({\n      ...prevState,\n      title: title\n    }))\n  }\n\n  changePublicationDate = (date) => {\n    this.setState(prevState => ({\n      ...prevState,\n      publicationDate: date\n    }))\n  }\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      publicationDate: ''\n    })\n  }\n\n  render() {\n    const {changeTitle, submit, changePublicationDate, state, refs} = this\n    const {title, publicationDate} = state\n    let _title,\n        _publicationDate\n    return (\n      <div className='add-book__host'>\n        <form className='add-book' onSubmit={submit}>\n          <div className='add-book__input__container'>\n            <input ref='_title'\n                   type='text'\n                   className='add-book__input'\n                   value={title}\n                   onChange={(e) => changeTitle(e.target.value)}\n                   placeholder='Book title...' required/>\n          </div>\n          <div className='add-book__input__container'>\n            Publication date:&nbsp;\n            <input ref='_publicationDate'\n                   type='number'\n                   className='add-book__input'\n                   value={publicationDate}\n                   onChange={(e) => changePublicationDate(e.target.value)}\n                   min='1800'\n                   max='2019' />\n          </div>\n          <button className='app__button'>Save</button>\n        </form>\n      </div>\n  )\n  }\n}\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n}\n\nexport default AddBookForm\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport './../stylesheets/AddBookForm.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addBook } from './../actions/actions';\nimport validTextInput from './../helpers/validTextInput'; // const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n//   const submit = e => {\n//     e.preventDefault()\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\nvar AddBookForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBookForm, _Component);\n\n  function AddBookForm(props, _ref) {\n    var _this;\n\n    var store = _ref.store;\n\n    _classCallCheck(this, AddBookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBookForm).call(this, props));\n    _this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    };\n    return _this;\n  }\n\n  return AddBookForm;\n}(Component);\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n};\nexport default AddBookForm;","map":{"version":3,"sources":["/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js"],"names":["React","Component","PropTypes","addBook","validTextInput","AddBookForm","props","store","state","title","editBook","publicationDate","contextTypes","object"],"mappings":";;;;AAAA,OAAO,kCAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,QAA4B;AAAA;;AAAA,QAARC,KAAQ,QAARA,KAAQ;;AAAA;;AAC1B,qFAAMD,KAAN;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEH,KAAK,CAACI,QAAN,CAAeD,KAAf,GAAuBH,KAAK,CAACI,QAAN,CAAeD,KAAtC,GAA8C,EAD1C;AAEXE,MAAAA,eAAe,EAAEL,KAAK,CAACI,QAAN,CAAeC,eAAf,GAAiCL,KAAK,CAACI,QAAN,CAAeC,eAAhD,GAAkE;AAFxE,KAAb;AAF0B;AAM3B;;;EAPuBV,S;;AAU1BI,WAAW,CAACO,YAAZ,GAA2B;AACzBL,EAAAA,KAAK,EAAEL,SAAS,CAACW;AADQ,CAA3B;AAIA,eAAeR,WAAf","sourcesContent":["import './../stylesheets/AddBookForm.css'\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { addBook } from './../actions/actions'\nimport validTextInput from './../helpers/validTextInput'\n\n// const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n\n//   const submit = e => {\n//     e.preventDefault()\n\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n    \n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n\n// }\n\nclass AddBookForm extends Component {\n  constructor(props, {store}) {\n    super(props)\n    this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    }\n  }\n}\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n}\n\nexport default AddBookForm\n"]},"metadata":{},"sourceType":"module"}
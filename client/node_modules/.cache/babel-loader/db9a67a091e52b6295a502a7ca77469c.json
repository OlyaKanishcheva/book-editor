{"ast":null,"code":"import _objectSpread from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js\";\nimport './../stylesheets/AddBookForm.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addBook } from './../actions/actions';\nimport validTextInput from './../helpers/validTextInput'; // const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n//   const submit = e => {\n//     e.preventDefault()\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\nvar AddBookForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBookForm, _Component);\n\n  function AddBookForm(props, _ref) {\n    var _this;\n\n    var store = _ref.store;\n\n    _classCallCheck(this, AddBookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBookForm).call(this, props));\n    _this.store = store;\n    _this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeTitle = _this.changeTitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearState = _this.clearState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBookForm, [{\n    key: \"submit\",\n    value: function submit(e) {\n      var state = this.state,\n          store = this.store,\n          refs = this.refs,\n          clearState = this.clearState;\n      e.preventDefault();\n      console.warn(refs);\n      var textInputs = [{\n        name: refs._title,\n        maxLength: 30\n      }];\n      if (!textInputs.every(function (input) {\n        return validTextInput({\n          input: input.name,\n          maxLength: input.maxLength\n        });\n      })) return;\n      store.dispatch(addBook({\n        title: state.title,\n        publicationDate: +state.publicationDate\n      })); // textInputs.forEach((input) => input.name.value = '')\n      // refs._publicationDate.value = ''\n\n      refs._title.focus();\n\n      clearState();\n    }\n  }, {\n    key: \"changeTitle\",\n    value: function changeTitle(title) {\n      this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          title: title\n        });\n      });\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      this.setState({});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var changeTitle = this.changeTitle,\n          submit = this.submit,\n          state = this.state,\n          refs = this.refs;\n      var title = state.title,\n          publicationDate = state.publicationDate; // let _title,\n      //     _publicationDate\n\n      return React.createElement(\"div\", {\n        className: \"add-book__host\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-book\",\n        onSubmit: submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"title\",\n        type: \"text\",\n        className: \"add-book__input\",\n        value: title,\n        onChange: function onChange(e) {\n          return changeTitle(e.target.value);\n        },\n        placeholder: \"Book title...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Publication date:\\xA0\", React.createElement(\"input\", {\n        ref: function ref(input) {\n          return refs._publicationDate = input;\n        },\n        type: \"number\",\n        className: \"add-book__input\",\n        min: \"1800\",\n        max: \"2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"app__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return AddBookForm;\n}(Component);\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n};\nexport default AddBookForm;","map":{"version":3,"sources":["/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js"],"names":["React","Component","PropTypes","addBook","validTextInput","AddBookForm","props","store","state","title","editBook","publicationDate","submit","bind","changeTitle","clearState","e","refs","preventDefault","console","warn","textInputs","name","_title","maxLength","every","input","dispatch","focus","setState","prevState","target","value","_publicationDate","contextTypes","object"],"mappings":"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","sourcesContent":["import './../stylesheets/AddBookForm.css'\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { addBook } from './../actions/actions'\nimport validTextInput from './../helpers/validTextInput'\n\n// const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n\n//   const submit = e => {\n//     e.preventDefault()\n\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n    \n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n\n// }\n\nclass AddBookForm extends Component {\n\n  constructor(props, {store}) {\n    super(props)\n\n    this.store = store\n    this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    }\n\n    this.submit = this.submit.bind(this)\n    this.changeTitle = this.changeTitle.bind(this)\n    this.clearState = this.clearState.bind(this)\n  }\n\n  submit(e) {\n    const {state, store, refs, clearState} = this\n    e.preventDefault()\n    console.warn(refs)\n    const textInputs = [{\n      name: refs._title,\n      maxLength: 30\n    }]\n\n    if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n    store.dispatch(addBook({\n      title: state.title,\n      publicationDate: +(state.publicationDate)\n    }))\n    \n    // textInputs.forEach((input) => input.name.value = '')\n    // refs._publicationDate.value = ''\n    refs._title.focus()\n    clearState()\n  }\n\n  changeTitle(title) {\n    this.setState(prevState => ({\n      ...prevState,\n      title: title\n    }))\n  }\n\n  clearState() {\n    this.setState({})\n  }\n\n  render() {\n    const {changeTitle, submit, state, refs} = this\n    const {title, publicationDate} = state\n    // let _title,\n    //     _publicationDate\n    return (\n      <div className='add-book__host'>\n        <form className='add-book' onSubmit={submit}>\n          <div className='add-book__input__container'>\n            <input ref='title'\n                   type='text'\n                   className='add-book__input'\n                   value={title}\n                   onChange={(e) => changeTitle(e.target.value)}\n                   placeholder='Book title...' required/>\n          </div>\n          <div className='add-book__input__container'>\n            Publication date:&nbsp;\n            <input ref={input => refs._publicationDate = input}\n                   type='number'\n                   className='add-book__input'\n                   min='1800'\n                   max='2019' />\n          </div>\n          <button className='app__button'>Save</button>\n        </form>\n      </div>\n  )\n  }\n}\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n}\n\nexport default AddBookForm\n"]},"metadata":{},"sourceType":"module"}
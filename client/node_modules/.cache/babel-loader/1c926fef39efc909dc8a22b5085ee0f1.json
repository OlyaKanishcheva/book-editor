{"ast":null,"code":"import _classCallCheck from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/olgakanishcheva/Developer/book-editor/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js\";\nimport './../stylesheets/AddBookForm.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addBook } from './../actions/actions';\nimport validTextInput from './../helpers/validTextInput'; // const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n//   const submit = e => {\n//     e.preventDefault()\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n// }\n\nvar AddBookForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBookForm, _Component);\n\n  function AddBookForm(props, _ref) {\n    var _this;\n\n    var store = _ref.store;\n\n    _classCallCheck(this, AddBookForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBookForm).call(this, props));\n    _this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBookForm, [{\n    key: \"submit\",\n    value: function submit(e) {\n      e.preventDefault();\n      var textInputs = [{\n        name: _title,\n        maxLength: 30\n      }];\n      if (!textInputs.every(function (input) {\n        return validTextInput({\n          input: input.name,\n          maxLength: input.maxLength\n        });\n      })) return;\n      store.dispatch(addBook({\n        title: _title.value,\n        publicationDate: +_publicationDate.value\n      }));\n      textInputs.forEach(function (input) {\n        return input.name.value = '';\n      });\n      _publicationDate.value = '';\n\n      _title.focus();\n    }\n  }, {\n    key: \"changeTitle\",\n    value: function changeTitle() {\n      this.setState(function (prevState) {\n        return {\n          prevState: prevState\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var changeTitle = this.changeTitle,\n          submit = this.submit,\n          state = this.state;\n      var title = state.title,\n          publicationDate = state.publicationDate;\n      return React.createElement(\"div\", {\n        className: \"add-book__host\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-book\",\n        onSubmit: submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(input) {\n          return _title = input;\n        },\n        type: \"text\",\n        className: \"add-book__input\",\n        value: title,\n        onChange: function onChange() {\n          return changeTitle();\n        },\n        placeholder: \"Book title...\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"add-book__input__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Publication date:\\xA0\", React.createElement(\"input\", {\n        ref: function ref(input) {\n          return _publicationDate = input;\n        },\n        type: \"number\",\n        className: \"add-book__input\",\n        min: \"1800\",\n        max: \"2019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"app__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return AddBookForm;\n}(Component);\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n};\nexport default AddBookForm;","map":{"version":3,"sources":["/Users/olgakanishcheva/Developer/book-editor/client/src/components/AddBookForm.js"],"names":["React","Component","PropTypes","addBook","validTextInput","AddBookForm","props","store","state","title","editBook","publicationDate","submit","bind","e","preventDefault","textInputs","name","_title","maxLength","every","input","dispatch","value","_publicationDate","forEach","focus","setState","prevState","changeTitle","contextTypes","object"],"mappings":";;;;;;;AAAA,OAAO,kCAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,QAA4B;AAAA;;AAAA,QAARC,KAAQ,QAARA,KAAQ;;AAAA;;AAC1B,qFAAMD,KAAN;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEH,KAAK,CAACI,QAAN,CAAeD,KAAf,GAAuBH,KAAK,CAACI,QAAN,CAAeD,KAAtC,GAA8C,EAD1C;AAEXE,MAAAA,eAAe,EAAEL,KAAK,CAACI,QAAN,CAAeC,eAAf,GAAiCL,KAAK,CAACI,QAAN,CAAeC,eAAhD,GAAkE;AAFxE,KAAb;AAIA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AAN0B;AAO3B;;;;2BAEMC,C,EAAG;AACRA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAG,CAAC;AAClBC,QAAAA,IAAI,EAAEC,MADY;AAElBC,QAAAA,SAAS,EAAE;AAFO,OAAD,CAAnB;AAKA,UAAI,CAACH,UAAU,CAACI,KAAX,CAAiB,UAACC,KAAD;AAAA,eAAWjB,cAAc,CAAC;AAACiB,UAAAA,KAAK,EAAEA,KAAK,CAACJ,IAAd;AAAoBE,UAAAA,SAAS,EAAEE,KAAK,CAACF;AAArC,SAAD,CAAzB;AAAA,OAAjB,CAAL,EAAmG;AAEnGZ,MAAAA,KAAK,CAACe,QAAN,CAAenB,OAAO,CAAC;AACrBM,QAAAA,KAAK,EAAES,MAAM,CAACK,KADO;AAErBZ,QAAAA,eAAe,EAAE,CAAEa,gBAAgB,CAACD;AAFf,OAAD,CAAtB;AAKAP,MAAAA,UAAU,CAACS,OAAX,CAAmB,UAACJ,KAAD;AAAA,eAAWA,KAAK,CAACJ,IAAN,CAAWM,KAAX,GAAmB,EAA9B;AAAA,OAAnB;AACAC,MAAAA,gBAAgB,CAACD,KAAjB,GAAyB,EAAzB;;AACAL,MAAAA,MAAM,CAACQ,KAAP;AACD;;;kCAEa;AACZ,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BA,UAAAA,SAAS,EAATA;AAD0B,SAAL;AAAA,OAAvB;AAGD;;;6BAEQ;AAAA,UACAC,WADA,GAC8B,IAD9B,CACAA,WADA;AAAA,UACajB,MADb,GAC8B,IAD9B,CACaA,MADb;AAAA,UACqBJ,KADrB,GAC8B,IAD9B,CACqBA,KADrB;AAAA,UAEAC,KAFA,GAE0BD,KAF1B,CAEAC,KAFA;AAAA,UAEOE,eAFP,GAE0BH,KAF1B,CAEOG,eAFP;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,QAAQ,EAAEC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,aAAAS,KAAK;AAAA,iBAAIH,MAAM,GAAGG,KAAb;AAAA,SAAjB;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,SAAS,EAAC,iBAFjB;AAGO,QAAA,KAAK,EAAEZ,KAHd;AAIO,QAAA,QAAQ,EAAE;AAAA,iBAAMoB,WAAW,EAAjB;AAAA,SAJjB;AAKO,QAAA,WAAW,EAAC,eALnB;AAKmC,QAAA,QAAQ,MAL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAO,QAAA,GAAG,EAAE,aAAAR,KAAK;AAAA,iBAAIG,gBAAgB,GAAGH,KAAvB;AAAA,SAAjB;AACO,QAAA,IAAI,EAAC,QADZ;AAEO,QAAA,SAAS,EAAC,iBAFjB;AAGO,QAAA,GAAG,EAAC,MAHX;AAIO,QAAA,GAAG,EAAC,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,EAiBE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF,CADF;AAuBD;;;;EA9DuBpB,S;;AAiE1BI,WAAW,CAACyB,YAAZ,GAA2B;AACzBvB,EAAAA,KAAK,EAAEL,SAAS,CAAC6B;AADQ,CAA3B;AAIA,eAAe1B,WAAf","sourcesContent":["import './../stylesheets/AddBookForm.css'\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { addBook } from './../actions/actions'\nimport validTextInput from './../helpers/validTextInput'\n\n// const AddBookForm = (props, { store }) => {\n//   let _title,\n//       _publicationDate\n\n//   const submit = e => {\n//     e.preventDefault()\n\n//     const textInputs = [{\n//       name: _title,\n//       maxLength: 30\n//     }]\n\n//     if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n//     store.dispatch(addBook({\n//       title: _title.value,\n//       publicationDate: +(_publicationDate.value)\n//     }))\n    \n//     textInputs.forEach((input) => input.name.value = '')\n//     _publicationDate.value = ''\n//     _title.focus()\n//   }\n\n//   return (\n//     <div className='add-book__host'>\n//       <form className='add-book' onSubmit={submit}>\n//         <div className='add-book__input__container'>\n//           <input ref={input => _title = input}\n//                  type='text'\n//                  className='add-book__input'\n//                  onChange={(e) => changeTitle()}\n//                  placeholder='Book title...' required/>\n//         </div>\n//         <div className='add-book__input__container'>\n//           Publication date:&nbsp;\n//           <input ref={input => _publicationDate = input}\n//                  type='number'\n//                  className='add-book__input'\n//                  min='1800'\n//                  max='2019' />\n//         </div>\n//         <button className='app__button'>Save</button>\n//       </form>\n//     </div>\n//   )\n\n// }\n\nclass AddBookForm extends Component {\n  constructor(props, {store}) {\n    super(props)\n    this.state = {\n      title: props.editBook.title ? props.editBook.title : '',\n      publicationDate: props.editBook.publicationDate ? props.editBook.publicationDate : null\n    }\n    this.submit = this.submit.bind(this)\n  }\n\n  submit(e) {\n    e.preventDefault()\n\n    const textInputs = [{\n      name: _title,\n      maxLength: 30\n    }]\n\n    if (!textInputs.every((input) => validTextInput({input: input.name, maxLength: input.maxLength}))) return\n\n    store.dispatch(addBook({\n      title: _title.value,\n      publicationDate: +(_publicationDate.value)\n    }))\n    \n    textInputs.forEach((input) => input.name.value = '')\n    _publicationDate.value = ''\n    _title.focus()\n  }\n\n  changeTitle() {\n    this.setState(prevState => ({\n      prevState\n    }))\n  }\n\n  render() {\n    const {changeTitle, submit, state} = this\n    const {title, publicationDate} = state\n    return (\n      <div className='add-book__host'>\n        <form className='add-book' onSubmit={submit}>\n          <div className='add-book__input__container'>\n            <input ref={input => _title = input}\n                   type='text'\n                   className='add-book__input'\n                   value={title}\n                   onChange={() => changeTitle()}\n                   placeholder='Book title...' required/>\n          </div>\n          <div className='add-book__input__container'>\n            Publication date:&nbsp;\n            <input ref={input => _publicationDate = input}\n                   type='number'\n                   className='add-book__input'\n                   min='1800'\n                   max='2019' />\n          </div>\n          <button className='app__button'>Save</button>\n        </form>\n      </div>\n  )\n  }\n}\n\nAddBookForm.contextTypes = {\n  store: PropTypes.object\n}\n\nexport default AddBookForm\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// from:\n// https://github.com/MoonHighway/learning-react/blob/master/chapter-09/color-organizer/src/store/index.js\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { books, sort, editBook } from './reducers';\nimport stateData from './../data/initialState';\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      var result;\n      console.groupCollapsed('dispatching', action.type);\n      console.log('prev state', store.getState());\n      console.log('action', action);\n      result = next(action);\n      console.log('next state', store.getState());\n      console.groupEnd();\n      return result;\n    };\n  };\n};\n\nvar saver = function saver(store) {\n  return function (next) {\n    return function (action) {\n      var result = next(action);\n      localStorage['redux-store'] = JSON.stringify(store.getState());\n      return result;\n    };\n  };\n};\n\nvar storeFactory = function storeFactory() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stateData;\n  return applyMiddleware(logger, saver)(createStore)(combineReducers({\n    books: books,\n    sort: sort,\n    editBook: editBook\n  }), localStorage['redux-store'] ? JSON.parse(localStorage['redux-store']) : stateData);\n};\n\nexport default storeFactory;","map":{"version":3,"sources":["/Users/olgakanishcheva/Developer/book-editor/client/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","books","sort","editBook","stateData","logger","store","next","action","result","console","groupCollapsed","type","log","getState","groupEnd","saver","localStorage","JSON","stringify","storeFactory","initialState","parse"],"mappings":"AAAA;AACA;AAGA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,YAAtC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxC,UAAIC,MAAJ;AACAC,MAAAA,OAAO,CAACC,cAAR,CAAuB,aAAvB,EAAsCH,MAAM,CAACI,IAA7C;AACAF,MAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,MAAAA,OAAO,CAACG,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACAC,MAAAA,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAb;AACAE,MAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BP,KAAK,CAACQ,QAAN,EAA1B;AACAJ,MAAAA,OAAO,CAACK,QAAR;AACA,aAAON,MAAP;AACD,KAT2B;AAAA,GAAR;AAAA,CAApB;;AAWA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAAAV,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACvC,UAAIC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAjB;AACAS,MAAAA,YAAY,CAAC,aAAD,CAAZ,GAA8BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACQ,QAAN,EAAf,CAA9B;AACA,aAAOL,MAAP;AACD,KAJ0B;AAAA,GAAR;AAAA,CAAnB;;AAMA,IAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA,MAACC,YAAD,uEAAcjB,SAAd;AAAA,SACnBJ,eAAe,CAACK,MAAD,EAASW,KAAT,CAAf,CAA+BlB,WAA/B,EACIC,eAAe,CAAC;AAACE,IAAAA,KAAK,EAALA,KAAD;AAAQC,IAAAA,IAAI,EAAJA,IAAR;AAAcC,IAAAA,QAAQ,EAARA;AAAd,GAAD,CADnB,EAEKc,YAAY,CAAC,aAAD,CAAb,GACIC,IAAI,CAACI,KAAL,CAAWL,YAAY,CAAC,aAAD,CAAvB,CADJ,GAEIb,SAJR,CADmB;AAAA,CAArB;;AAQA,eAAegB,YAAf","sourcesContent":["// from:\n// https://github.com/MoonHighway/learning-react/blob/master/chapter-09/color-organizer/src/store/index.js\n\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { books, sort, editBook } from './reducers'\nimport stateData from './../data/initialState'\n\nconst logger = store => next => action => {\n  let result\n  console.groupCollapsed('dispatching', action.type)\n  console.log('prev state', store.getState())\n  console.log('action', action)\n  result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nconst saver = store => next => action => {\n  let result = next(action)\n  localStorage['redux-store'] = JSON.stringify(store.getState())\n  return result\n}\n\nconst storeFactory = (initialState=stateData) =>\n  applyMiddleware(logger, saver)(createStore)(\n      combineReducers({books, sort, editBook}),\n      (localStorage['redux-store']) ?\n          JSON.parse(localStorage['redux-store']) :\n          stateData\n  )\n\nexport default storeFactory"]},"metadata":{},"sourceType":"module"}